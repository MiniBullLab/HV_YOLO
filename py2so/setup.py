from distutils.core import setup
from distutils.extension import Extension
from Cython.Build import cythonize
from Cython.Distutils import build_ext

extentions = []
full_filenames = ["easyAI/main.py", "easyAI/convert.py", "easyAI/base_algorithm/nms.py", "easyAI/base_model/shufflenetv2.py", "easyAI/base_model/base_model_factory.py", "easyAI/base_model/mobilenetv2.py", "easyAI/base_model/base_model.py", "easyAI/base_model/my_base_model.py", "easyAI/base_name/base_model_name.py", "easyAI/base_name/block_name.py", "easyAI/base_name/model_name.py", "easyAI/base_name/loss_name.py", "easyAI/model/modelResultProcess.py", "easyAI/model/modelParse.py", "easyAI/model/modeWeightInit.py", "easyAI/model/createModelList.py", "easyAI/model/myModel.py", "easyAI/model/model_factory.py", "easyAI/model/mobileV2FCN.py", "easyAI/utility/logger.py", "easyAI/utility/utils.py", "easyAI/base_block/activation_function.py", "easyAI/base_block/shufflenet_block.py", "easyAI/base_block/batchnorm.py", "easyAI/base_block/base_block.py", "easyAI/base_block/utility_layer.py", "easyAI/base_block/utility_block.py", "easyAI/base_block/resnet_block.py", "easyAI/runner/detectTest.py", "easyAI/runner/classifyTest.py", "easyAI/runner/segmentTest.py", "easyAI/runner/detectTrain.py", "easyAI/runner/classifyTrain.py", "easyAI/runner/segment.py", "easyAI/runner/segmentTrain.py", "easyAI/runner/fgseg_train.py", "easyAI/runner/detect.py", "easyAI/helper/videoProcess.py", "easyAI/helper/dirProcess.py", "easyAI/helper/imageProcess.py", "easyAI/helper/dataType.py", "easyAI/helper/xmlProcess.py", "easyAI/helper/arguments_parse.py", "easyAI/drawing/imageDraw.py", "easyAI/drawing/colorDefine.py", "easyAI/drawing/modelNetShow.py", "easyAI/torch_onnx/torch_to_onnx.py", "easyAI/torch_onnx/model_show.py", "easyAI/converter/keras_models/my_upsampling_2d.py", "easyAI/converter/keras_models/instance_normalization.py", "easyAI/converter/keras_models/my_fgsegnetv2.py", "easyAI/converter/keras_models/model_factory.py", "easyAI/converter/keras_models/base_model.py", "easyAI/converter/keras_models/model_process.py", "easyAI/converter/keras_models/model_name.py", "easyAI/converter/keras_models/fgsegnetv2.py", "easyAI/converter/onnx2caffe/operators.py", "easyAI/converter/onnx2caffe/weightloader.py", "easyAI/converter/onnx2caffe/graph.py", "easyAI/converter/onnx2caffe/error_utils.py", "easyAI/converter/onnx2caffe/transformers.py", "easyAI/converter/onnx2caffe/my_caffe.py", "easyAI/config/classifyConfig.py", "easyAI/config/fgseg_config.py", "easyAI/config/detectConfig.py", "easyAI/config/segmentConfig.py", "easyAI/config/base_config.py", "easyAI/loss/focal_loss.py", "easyAI/loss/yolo_loss.py", "easyAI/loss/ohem_cross_entropy2d.py", "easyAI/loss/base_loss.py", "easyAI/loss/cross_entropy2d.py", "easyAI/loss/smooth_cross_entropy.py", "easyAI/torch_utility/model_summary.py", "easyAI/torch_utility/torchOptimizer.py", "easyAI/torch_utility/torchDeviceProcess.py", "easyAI/torch_utility/torchModelProcess.py", "easyAI/tools/createSample.py", "easyAI/tools/onnx_convert_caffe.py", "easyAI/tools/model_to_onnx.py", "easyAI/tools/keras_convert_tensorflow.py", "easyAI/solver/lr_scheduler.py", "easyAI/solver/base_lr_secheduler.py", "easyAI/evaluation/metrics.py", "easyAI/evaluation/evaluatingOfmAp.py", "easyAI/data_loader/videoLoader.py", "easyAI/data_loader/dataAugment.py", "easyAI/data_loader/imageDetectValDataLoader.py", "easyAI/data_loader/trainDataProcess.py", "easyAI/data_loader/imagesLoader.py", "easyAI/data_loader/imageDetectTrainDataLoader.py", "easyAI/data_loader/imageClassifyTrainDataLoard.py", "easyAI/data_loader/imageSegmentTrainDataLoader.py", "easyAI/data_loader/imageSegmentValDataLoader.py", "easyAI/data_loader/dataLoader.py"]
for full_filename in full_filenames:
    filename = full_filename[:-3].replace('/', '.')
    extention = Extension(filename, [full_filename])
    extention.cython_c_in_temp = True
    extentions.append(extention)

setup(
    cmdclass={'build_ext': build_ext},
    ext_modules = cythonize(extentions, nthreads=1, build_dir="tmp_build", compiler_directives={"language_level": 3})
)
